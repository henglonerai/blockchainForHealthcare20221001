{"version":3,"sources":["add.component.ts"],"names":[],"mappings":"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","file":"add.component.js","sourcesContent":["import { Component, OnInit } from '@angular/core';\nimport { IPFSHTTPClient } from 'ipfs-http-client/dist/src/types';\nimport { PatientService } from 'src/admin/services/patient.service';\n\n\n@Component({\n  selector: 'patient-add',\n  templateUrl: './add.component.html',\n  styleUrls: ['./add.component.sass'],\n})\nexport class PatientAddComponent implements OnInit {\n  model: any = {\n    patID: '',\n    fName: 'first_name',\n    lName: 'last_name',\n    Doj: '',\n    emailID: 'test_name@gmail.com',\n    phone: '0107674088',\n    city: 'Eg: Butterworth',\n    state: 'Eg: Penang',\n    speciality: 'Eg: Cardiologist',\n    imageHash: '',\n  };\n\n  image_url: any;\n  imageCompressedUrl: string = '';\n\n  show: boolean = false;\n  msg_text: string = '';\n  warn: boolean = false;\n  success: boolean = false\n\n  ipfs: IPFSHTTPClient;\n\n  IPFShash: string = ''\n\n  constructor(\n    private ps: PatientService\n  ) {\n    this.ipfs = ps.ipfs\n  }\n\n  ngOnInit(): void {\n    this.ipfs = this.ps.ipfs\n  }\n\n  onAddPatientSubmit() {\n    this.show = true;\n    this.msg_text = 'Adding Patient to the Network....';\n    this.warn = false;\n\n    this.model.imageHash = this.image_url;\n\n    let data = this.model;\n\n    this.ps.addPatient(this.model.patID, data).then((r: any) => {\n      this.success = true\n      this.msg_text = 'Data added to IPFS...';\n      this.msg_text += '<br>User Added to the Blockchain';\n      console.log('User added Successfully');\n\n      this.model = {}\n\n    }).catch((er: any) => {\n      this.warn = true\n      this.msg_text =\n        'Adding Patient Failed<br> <small class=\"fw-light text-danger\"><b>\"</b>' +\n        this.model.patID +\n        '<b>\"</b></small><br>1.not a valid address or <br>2.Already have a role';\n      console.log(er);\n    })\n  }\n\n\n  PreviewImage(event: any) {\n    if (event.target.files && event.target.files[0]) {\n      var reader = new FileReader();\n      reader.onload = (event: any) => {\n        this.image_url = event.target.result;\n        // this.compressImage();\n        console.log(this.image_url);\n\n      };\n      reader.readAsDataURL(event.target.files[0]);\n    }\n  }\n\n  onClose() {\n    this.show = false;\n    this.warn = false;\n  }\n}\n"]}